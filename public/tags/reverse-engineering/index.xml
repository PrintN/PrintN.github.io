<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reverse Engineering on PrintN</title>
    <link>http://localhost:1313/tags/reverse-engineering/</link>
    <description>Recent content in Reverse Engineering on PrintN</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language><atom:link href="http://localhost:1313/tags/reverse-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>easy_reverse - Crackmes Write-Up</title>
      <link>http://localhost:1313/posts/easy_reverse-crackmes/2024-08-07-easy_reverse-crackmes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/easy_reverse-crackmes/2024-08-07-easy_reverse-crackmes/</guid>
      
      <description>Hello ðŸ‘‹ Today we are going to reverse engineer &amp;ldquo;easy_reverse&amp;rdquo; from cbm-hackers. NOTE: Please try to solve this challenge by yourself first before looking at the solution. If you have tried your best and can&amp;rsquo;t solve it then please don&amp;rsquo;t just take the answer and leave immediately because that is not how you learn reverse engineering.
Prerequisites: Ghidra easy_reverse executable (unzip with password &amp;ldquo;crackmes.one&amp;rdquo;) What does it do? So the program is very simple it just asks us to provide a password when running it.</description>
      
    </item>
    
    <item>
      <title>good_boy - Crackmes Write-Up</title>
      <link>http://localhost:1313/posts/good_boy-crackmes/2024-08-09-good_boy-crackmes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/good_boy-crackmes/2024-08-09-good_boy-crackmes/</guid>
      
      <description>Hello ðŸ‘‹ Today we are going to reverse engineer &amp;ldquo;good_boy&amp;rdquo; by fdisotto. NOTE: Please try to solve this challenge by yourself first before looking at the solution. If you have tried your best and can&amp;rsquo;t solve it then please don&amp;rsquo;t just take the answer and leave immediately because that is not how you learn reverse engineering.
Prerequisites: Ghidra good_boy executable (unzip with password &amp;ldquo;crackmes.one&amp;rdquo;) What does it do? So the program is very simple it just asks us to provide a password when running it and if we give the false password it calls us a bad boy.</description>
      
    </item>
    
    <item>
      <title>unpackme - PicoCTF Write-Up</title>
      <link>http://localhost:1313/posts/unpackme-picoctf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/unpackme-picoctf/</guid>
      
      <description>Introduction Hello! ðŸ‘‹ Today, we&amp;rsquo;re going to take a look at the &amp;lsquo;unpackme&amp;rsquo; challenge on PicoCTF by LT &amp;lsquo;syreal&amp;rsquo; Jones. The difficulty level is medium.&amp;quot;
Challenge Description Can you get the flag?
Reverse engineer this binary .
Solution So, let&amp;rsquo;s make the binary executable using chmod.
chmod +x unpackme-upx Now, let&amp;rsquo;s try running the executable and see what it does.
â”Œâ”€â”€(printnã‰¿printn)-[~] â””â”€$ ./unpackme-upx What&amp;#39;s my favorite number? 1 Sorry, that&amp;#39;s not it!</description>
      
    </item>
    
  </channel>
</rss>
